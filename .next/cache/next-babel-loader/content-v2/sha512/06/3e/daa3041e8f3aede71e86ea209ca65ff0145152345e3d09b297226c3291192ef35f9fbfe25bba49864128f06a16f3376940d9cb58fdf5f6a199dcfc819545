{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andrewsimons/Desktop/meetup/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/andrewsimons/Desktop/meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address"],"mappings":";;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,UADD;AAQA;;KATQL,a;;AAuDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\n\nfunction MeetupDetails(props) {\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage={props.meetupData.image}\n\t\t\ttitle={props.meetupData.title}\n\t\t\taddress={props.meetupData.address}\n\t\t\tdescription='This is a first meetup'\n\t\t/>\n\t);\n}\n\nexport async function getStaticPaths() {\n\n\t\tconst client = await MongoClient.connect(\n\t\t\t'mongodb+srv://Simdrew07:MOS2Y0xqd9oD2vmk@cluster0.liswm.mongodb.net/meetups?retryWrites=true&w=majority'\n\t\t);\n\t\tconst db = client.db();\n\n\tconst meetupsCollection = db.collection('meetups');\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\t\n\tclient.close();\n\t\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n}\n\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetup\n\n\tconst meetupId = context.params.meetupId;\n\n\t\tconst client = await MongoClient.connect(\n\t\t\t'mongodb+srv://Simdrew07:MOS2Y0xqd9oD2vmk@cluster0.liswm.mongodb.net/meetups?retryWrites=true&w=majority'\n\t\t);\n\t\tconst db = client.db();\n\n\t\tconst meetupsCollection = db.collection('meetups');\n\n\tconst selectedMeetup = meetupsCollection.findOne({_id: meetupId});\n\n\tclient.close();\n\t\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: selectedMeetup,\n\t\t},\n\t};\n\t}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}